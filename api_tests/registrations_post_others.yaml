# ********RoostGPT********
# Test generated by RoostGPT for test elasticLogStash using AI Type Open AI and AI Model gpt-4

# Test generated for /recipients/branches/{id}/registrations_post for http method type POST in artillery framework
# RoostTestHash=16a6858a84



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "registrations_post_others.csv"
    fields:
      - "id"
      - "credentialUrl"
      - "startDate"
      - "endDate"
      - "reference"
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 20
  environments:
    dev:
      target: "http://localhost:3000"
      $processEnvironment:
        AUTH_TOKEN: "your_auth_token_here"

scenarios:
  - name: "Testing API for various non-successful cases"
    flow:
      # Testing POST /recipients/branches/{id}/registrations with invalid id
      - post:
          url: "/recipients/branches/{{ id }}/registrations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            credentialUrl: "{{ credentialUrl }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            reference: "{{ reference }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
          think: 1

      # Testing POST /recipients/branches/{id}/registrations with invalid credentialUrl
      - post:
          url: "/recipients/branches/{{ id }}/registrations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            credentialUrl: "invalidUrl"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            reference: "{{ reference }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
          think: 1

      # Testing POST /recipients/branches/{id}/registrations with missing startDate
      - post:
          url: "/recipients/branches/{{ id }}/registrations"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            credentialUrl: "{{ credentialUrl }}"
            endDate: "{{ endDate }}"
            reference: "{{ reference }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
          think: 1

      # Testing POST /recipients/branches/{id}/registrations with invalid URL
      - post:
          url: "/invalidUrl"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            credentialUrl: "{{ credentialUrl }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            reference: "{{ reference }}"
          expect:
            - statusCode: 404
          think: 1
