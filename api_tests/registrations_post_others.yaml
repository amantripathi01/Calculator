# ********RoostGPT********
# Test generated by RoostGPT for test elasticLogStash using AI Type Open AI and AI Model gpt-4

# Test generated for /recipients/persons/{id}/registrations_post for http method type POST in artillery framework
# RoostTestHash=0973c499e9



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "registrations_post_others.csv"
    fields:
      - "id"
      - "credentialUrl"
      - "startDate"
      - "reference"
      - "endDate"
    skipHeader: true

scenarios:
  - name: "Test case for non-success API responses"
    flow:
      # Test case for invalid payload
      - post:
          url: "/recipients/persons/{{ id }}/registrations"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
            content-type: "application/json"
          json:
            reference: "{{ reference }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            credentialUrl: "invalid_url"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
          think: 1

      # Test case for invalid authentication
      - post:
          url: "/recipients/persons/{{ id }}/registrations"
          headers:
            Token: "invalid_token"
            content-type: "application/json"
          json:
            reference: "{{ reference }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            credentialUrl: "{{ credentialUrl }}"
          expect:
            - statusCode: 401
            - hasProperty: "error"
            - hasProperty: "description"
          think: 1

      # Test case for invalid URL
      - post:
          url: "/invalid_url/{{ id }}/registrations"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
            content-type: "application/json"
          json:
            reference: "{{ reference }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            credentialUrl: "{{ credentialUrl }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
            - hasProperty: "description"
          think: 1
