// ********RoostGPT********
/*
Test generated by RoostGPT for test privateMethodsJava using AI Type Open AI and AI Model gpt-4

1. Test Scenario: Validate that the getThemesAsMap() method returns a non-null Map object when the themes list is not empty.
   Description: This test scenario is to validate that the getThemesAsMap() method correctly converts the list of themes into a Map object and returns a non-null Map object when the themes list is not empty.

2. Test Scenario: Validate that the getThemesAsMap() method returns an empty Map when the themes list is empty.
   Description: This test scenario is to validate that the getThemesAsMap() method correctly handles the case where the list of themes is empty and returns an empty Map.

3. Test Scenario: Validate that the getThemesAsMap() method correctly maps theme names to corresponding Theme objects.
   Description: This test scenario is to validate that the getThemesAsMap() method correctly converts the list of themes into a Map object, with theme names as keys and corresponding Theme objects as values.

4. Test Scenario: Validate that the getThemesAsMap() method correctly handles duplicate theme names in the themes list.
   Description: This test scenario is to validate that the getThemesAsMap() method correctly handles the case where there are duplicate theme names in the themes list. In this case, the last occurrence of the duplicate theme should be in the resulting Map.

5. Test Scenario: Validate that the getThemesAsMap() method throws a NullPointerException when the themes list is null.
   Description: This test scenario is to validate that the getThemesAsMap() method throws a NullPointerException when the themes list is null. This is based on the assumption that the method does not handle null inputs.

6. Test Scenario: Validate that the getThemesAsMap() method correctly handles themes with null or empty names.
   Description: This test scenario is to validate that the getThemesAsMap() method correctly handles the case where there are themes with null or empty names in the themes list. In this case, these themes should be in the resulting Map with null or empty strings as keys.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.*;

class ThemeList_getThemesAsMap_4c59a768b5_Test {

    private ThemeList themeList;
    private List<Theme> themes;

    @BeforeEach
    void setUp() {
        themeList = new ThemeList();
        themes = new ArrayList<>();
    }

    @Test
    void testGetThemesAsMap_NonEmptyList() {
        Theme theme = new Theme();
        theme.setName("Dark");
        themes.add(theme);

        themeList.setThemes(themes);

        Map<String, Theme> result = themeList.getThemesAsMap();

        assertNotNull(result);
        assertEquals(1, result.size());
        assertEquals(theme, result.get("Dark"));
    }

    @Test
    void testGetThemesAsMap_EmptyList() {
        themeList.setThemes(themes);

        Map<String, Theme> result = themeList.getThemesAsMap();

        assertNotNull(result);
        assertTrue(result.isEmpty());
    }

    @Test
    void testGetThemesAsMap_DuplicateThemeNames() {
        Theme theme1 = new Theme();
        theme1.setName("Dark");
        themes.add(theme1);

        Theme theme2 = new Theme();
        theme2.setName("Dark");
        themes.add(theme2);

        themeList.setThemes(themes);

        Map<String, Theme> result = themeList.getThemesAsMap();

        assertNotNull(result);
        assertEquals(1, result.size());
        assertEquals(theme2, result.get("Dark"));
    }

    @Test
    void testGetThemesAsMap_NullThemeList() {
        assertThrows(NullPointerException.class, () -> themeList.getThemesAsMap());
    }

    @Test
    void testGetThemesAsMap_NullThemeName() {
        Theme theme = new Theme();
        themes.add(theme);

        themeList.setThemes(themes);

        Map<String, Theme> result = themeList.getThemesAsMap();

        assertNotNull(result);
        assertEquals(1, result.size());
        assertEquals(theme, result.get(null));
    }

    @Test
    void testGetThemesAsMap_EmptyThemeName() {
        Theme theme = new Theme();
        theme.setName("");
        themes.add(theme);

        themeList.setThemes(themes);

        Map<String, Theme> result = themeList.getThemesAsMap();

        assertNotNull(result);
        assertEquals(1, result.size());
        assertEquals(theme, result.get(""));
    }
}
