// ********RoostGPT********
/*
Test generated by RoostGPT for test privateMethodsJava using AI Type Open AI and AI Model gpt-4

1. Scenario: Test when a valid color code is passed as a parameter.
   - Given a valid color code as a string.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the given color code.

2. Scenario: Test when an empty string is passed as a parameter.
   - Given an empty string.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the default color or remain unchanged.

3. Scenario: Test when a null value is passed as a parameter.
   - Given a null value.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the default color or remain unchanged.

4. Scenario: Test when a color code in the wrong format is passed as a parameter.
   - Given a color code in the wrong format.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the default color or remain unchanged.

5. Scenario: Test when a color code not supported by the system is passed as a parameter.
   - Given a color code not supported by the system.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the default color or remain unchanged.

6. Scenario: Test when a color code with extra spaces is passed as a parameter.
   - Given a color code with extra spaces.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be trimmed and set to the given color code.

7. Scenario: Test when a color code with special characters is passed as a parameter.
   - Given a color code with special characters.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the default color or remain unchanged.

8. Scenario: Test when a color code with mixed case is passed as a parameter.
   - Given a color code with mixed case.
   - When the method setBtnEqualTextColor is called.
   - Then the btnEqualTextColor should be set to the given color code, as color codes are case-insensitive.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import static org.junit.jupiter.api.Assertions.*;

public class Theme_setBtnEqualTextColor_dea3d0f34c_Test {
    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testSetBtnEqualTextColor_ValidColorCode() {
        String validColorCode = "#FF5733";
        theme.setBtnEqualTextColor(validColorCode);
        assertEquals(validColorCode, theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_EmptyString() {
        theme.setBtnEqualTextColor("");
        assertNotNull(theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_NullValue() {
        theme.setBtnEqualTextColor(null);
        assertNotNull(theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_WrongFormat() {
        String wrongFormatColorCode = "FF5733";
        theme.setBtnEqualTextColor(wrongFormatColorCode);
        assertNotEquals(wrongFormatColorCode, theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_NotSupportedColorCode() {
        String notSupportedColorCode = "#XYZ123";
        theme.setBtnEqualTextColor(notSupportedColorCode);
        assertNotEquals(notSupportedColorCode, theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_ExtraSpaces() {
        String colorCodeWithExtraSpaces = "  #FF5733  ";
        theme.setBtnEqualTextColor(colorCodeWithExtraSpaces);
        assertEquals(colorCodeWithExtraSpaces.trim(), theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_SpecialCharacters() {
        String colorCodeWithSpecialCharacters = "#@!$%^&*()";
        theme.setBtnEqualTextColor(colorCodeWithSpecialCharacters);
        assertNotEquals(colorCodeWithSpecialCharacters, theme.getBtnEqualTextColor());
    }

    @Test
    public void testSetBtnEqualTextColor_MixedCase() {
        String colorCodeWithMixedCase = "#Ff5733";
        theme.setBtnEqualTextColor(colorCodeWithMixedCase);
        assertEquals(colorCodeWithMixedCase, theme.getBtnEqualTextColor());
    }
}
