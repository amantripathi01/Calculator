// ********RoostGPT********
/*
Test generated by RoostGPT for test privateMethodsJava using AI Type Open AI and AI Model gpt-4

1. Scenario: Test when a valid color code is passed as parameter
   - Given that a valid color code "#FFFFFF" is passed as a parameter to the function
   - When the function `setBtnEqualBackground` is called
   - Then the `btnEqualBackground` should be updated correctly with the new value
   
2. Scenario: Test when an invalid color code is passed as parameter
   - Given that an invalid color code "123456" is passed as a parameter to the function
   - When the function `setBtnEqualBackground` is called
   - Then the behavior should be as per the business logic (depending on how the function is expected to handle such cases)

3. Scenario: Test when a null value is passed as parameter
   - Given that a null value is passed as a parameter to the function
   - When the function `setBtnEqualBackground` is called
   - Then the `btnEqualBackground` should be updated to null (or the default value, if nulls are not allowed)

4. Scenario: Test when an empty string is passed as parameter
   - Given that an empty string is passed as a parameter to the function
   - When the function `setBtnEqualBackground` is called
   - Then the `btnEqualBackground` should be updated to an empty string (or the default value, if empty strings are not allowed)

5. Scenario: Test when a color code in lower case is passed as parameter
   - Given that a valid color code "#ffffff" in lower case is passed as a parameter to the function
   - When the function `setBtnEqualBackground` is called
   - Then the `btnEqualBackground` should be updated correctly with the new value

6. Scenario: Test when a color code in mixed case is passed as parameter
   - Given that a valid color code "#FfFfFf" in mixed case is passed as a parameter to the function
   - When the function `setBtnEqualBackground` is called
   - Then the `btnEqualBackground` should be updated correctly with the new value
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class Theme_setBtnEqualBackground_85fbd39ea7_Test {

    private Theme theme;

    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testSetBtnEqualBackground_ValidColorCode() {
        String validColorCode = "#FFFFFF";
        theme.setBtnEqualBackground(validColorCode);
        assertEquals(validColorCode, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_InvalidColorCode() {
        String invalidColorCode = "123456";
        theme.setBtnEqualBackground(invalidColorCode);
        assertEquals(invalidColorCode, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_NullValue() {
        theme.setBtnEqualBackground(null);
        assertNull(theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_EmptyString() {
        theme.setBtnEqualBackground("");
        assertEquals("", theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_LowerCaseColorCode() {
        String lowerCaseColorCode = "#ffffff";
        theme.setBtnEqualBackground(lowerCaseColorCode);
        assertEquals(lowerCaseColorCode, theme.getBtnEqualBackground());
    }

    @Test
    public void testSetBtnEqualBackground_MixedCaseColorCode() {
        String mixedCaseColorCode = "#FfFfFf";
        theme.setBtnEqualBackground(mixedCaseColorCode);
        assertEquals(mixedCaseColorCode, theme.getBtnEqualBackground());
    }
}
