// ********RoostGPT********
/*
Test generated by RoostGPT for test privateMethodsJava using AI Type Open AI and AI Model gpt-4

Here are some test scenarios to validate the business logic of the `getBtnEqualBackground` method:

1. **Scenario:** Verify that the method returns the correct value of `btnEqualBackground`:
   - **Steps:** Invoke the `getBtnEqualBackground` method.
   - **Expected Result:** The method should return the exact value of `btnEqualBackground`.

2. **Scenario:** Check if the method returns a null value when `btnEqualBackground` is null:
   - **Steps:** Set `btnEqualBackground` to null, then invoke `getBtnEqualBackground`.
   - **Expected Result:** The method should return null.

3. **Scenario:** Verify the method's return type:
   - **Steps:** Invoke the `getBtnEqualBackground` method.
   - **Expected Result:** The returned value should be of type `String`.

4. **Scenario:** Check the method when `btnEqualBackground` is an empty string:
   - **Steps:** Set `btnEqualBackground` to an empty string, then invoke `getBtnEqualBackground`.
   - **Expected Result:** The method should return an empty string.

5. **Scenario:** Check the method when `btnEqualBackground` is set to some random string value:
   - **Steps:** Set `btnEqualBackground` to a non-empty string, then invoke `getBtnEqualBackground`.
   - **Expected Result:** The method should return the value of `btnEqualBackground`.

6. **Scenario:** Check the method's behavior with different string formats (such as strings with white space, strings with special characters, long strings, etc.):
   - **Steps:** Set `btnEqualBackground` to different string formats, then invoke `getBtnEqualBackground`.
   - **Expected Result:** The method should return the exact value of `btnEqualBackground` in each case.
*/

// ********RoostGPT********
package com.houarizegai.calculator.theme.properties;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class Theme_getBtnEqualBackground_f33e0d9be0_Test {
    
    private Theme theme;
    
    @BeforeEach
    public void setUp() {
        theme = new Theme();
    }

    @Test
    public void testGetBtnEqualBackground_ReturnsCorrectValue() {
        theme.setBtnEqualBackground("blue");
        assertEquals("blue", theme.getBtnEqualBackground());
    }

    @Test
    public void testGetBtnEqualBackground_ReturnsNullWhenValueIsNull() {
        theme.setBtnEqualBackground(null);
        assertNull(theme.getBtnEqualBackground());
    }

    @Test
    public void testGetBtnEqualBackground_ReturnsEmptyStringWhenValueIsEmpty() {
        theme.setBtnEqualBackground("");
        assertEquals("", theme.getBtnEqualBackground());
    }

    @Test
    public void testGetBtnEqualBackground_CheckReturnType() {
        theme.setBtnEqualBackground("blue");
        assertTrue(theme.getBtnEqualBackground() instanceof String);
    }

    @Test
    public void testGetBtnEqualBackground_ReturnsCorrectValueWithRandomStringValue() {
        theme.setBtnEqualBackground("random");
        assertEquals("random", theme.getBtnEqualBackground());
    }

    @Test
    public void testGetBtnEqualBackground_ReturnsCorrectValueWithDifferentStringFormats() {
        theme.setBtnEqualBackground("   random string   ");
        assertEquals("   random string   ", theme.getBtnEqualBackground());

        theme.setBtnEqualBackground("!@#$%^&*()");
        assertEquals("!@#$%^&*()", theme.getBtnEqualBackground());

        theme.setBtnEqualBackground("long string long string long string long string");
        assertEquals("long string long string long string long string", theme.getBtnEqualBackground());
    }
}
